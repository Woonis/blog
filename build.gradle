plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.4'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'com.woonis'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

allprojects {
	repositories {
		mavenCentral()
	}
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	configurations {
		compileOnly {
			extendsFrom annotationProcessor
		}
	}

	dependencies {
		// collection utils use.
		implementation("com.google.guava:guava:31.1-jre")

		// validation
		implementation("javax.validation:validation-api:2.0.1.Final")

		compileOnly("org.projectlombok:lombok")
		annotationProcessor("org.projectlombok:lombok")

		testImplementation("org.springframework.boot:spring-boot-starter-test")
	}
}

// apps
project(':apps:blog-api') {
	jar.enabled = false

	bootJar {
		enabled = true
		mainClass = 'sample.wooni.blog.BlogApiApplication'
	}

	dependencies {
		implementation project(":libs:application")

		implementation("org.springframework.boot:spring-boot-starter-web")
		implementation("org.springframework.boot:spring-boot-starter-actuator")


		runtimeOnly(project(":libs:adapter-http"))
	}
}

// libs
project(':libs:adapter-http') {
	bootJar.enabled = false
	jar.enabled = true

	dependencies {
		implementation project(':libs:application')
		implementation("org.springframework.boot:spring-boot-starter-web")
	}
}

project(':libs:application') {
	bootJar.enabled = false
	jar.enabled = true

	def queryDslVersion = '5.0.0'

	dependencies {
		implementation("org.springframework.boot:spring-boot-starter-web")
		implementation("org.springframework.boot:spring-boot-starter-actuator")
		implementation("org.springframework.boot:spring-boot-starter-data-jpa")
		implementation("org.springframework.boot:spring-boot-starter-validation")


		//qeury dsl & flyway
		implementation("com.querydsl:querydsl-core:${queryDslVersion}")
		implementation("com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta")
		annotationProcessor("com.querydsl:querydsl-apt:${queryDslVersion}:jakarta", "jakarta.persistence:jakarta.persistence-api:3.1.0")
		implementation("org.flywaydb:flyway-core")


		//db
		runtimeOnly("com.h2database:h2")
	}

	// query dsl setting
	def querydslDir = "$buildDir/generated/querydsl"

	sourceSets {
		main.java.srcDirs += [ querydslDir ]
	}

	tasks.withType(JavaCompile) {
		options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
	}

	clean.doLast {
		file(querydslDir).deleteDir()
	}
}

tasks.named('test') {
	useJUnitPlatform()
}


